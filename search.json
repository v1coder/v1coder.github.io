[{"title":"Mac 终端设置命令别名","url":"/2018/12/11/Mac-终端设置命令别名/","content":"\n\n\n<br>\n\n```\n# 进入根目录\ncd ~  \n\n# 创建bash文件\ntouch .bash_profile\n\n# 编辑\nvim .bash_profile\n\n# 使文件生效\nsource .bash_profile\n```\n\n<br>\n\n```\n# 查看现有别名\nalias\n\n# 创建命令别名之前先测试命令名是否已存在\n# 例如测试 foo\ntype foo \nbash: type: foo: not found\n# 输出 not found 说明未存在\n```\n\n<br>\n\n为多个命令的组合设置别名：\n\n```\nalias hcgd='hexo clean&&hexo g&&hexo d'\n```\n\n（如果不管命令执行是否成功都往下执行，可以用 `;` 分割多个语句放在一行执行，如果希望前面的执行成功才执行后面的语句，用 `&&` 分割多个语句放在一行执行。）","tags":["mac","linux"]},{"title":"使用 Hexo 在 Github 上建博客","url":"/2018/12/11/使用-Hexo-在-Github-上建博客/","content":"\n\n\n先确认  git 与 npm 已经安装，在终端输入以下命令\n\n```\ngit --version\nnpm --version\n```\n\n<br>\n\n### 安装 hexo，在终端输入\n\n```\nnpm install hexo-cli -g\n```\n\n安装过程中报错\n\n![](https://upload-images.jianshu.io/upload_images/9691564-709e80ccccc33db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n解决方法：\n\n```\nsudo npm install hexo-cli -g\n```\n\n确认 hexo 安装成功：\n\n```\nhexo version\n```\n\n<br>\n\n来到你中意的目录（文件夹）：\n\n```\ncd /Users/v1coder/Documents/\n```\n\n然后\n\n```\nhexo init blog\ncd blog\nnpm install\nhexo g\nhexo server\n```\n\n此时新建了一个 blog 文件夹，并且 blog 里创建了所需要的文件。（ blog 可以改成你中意的其他文件夹名）\n\n这些完成之，你就可以打开浏览器，在地址栏里输入： `http://localhost:4000`，在本地先看看网站是什么样子。\n\n<br>\n\n### 配置秘钥\n\n- 检查 SSH keys 是否已经存在\n\n终端执行如下命令：\n\n```\nls ~/.ssh\n```\n\n如果显示如下信息(重点是要有`id_rsa`和`id_rsa.pub`)，就说明 SSH keys 已经存在了：\n\n```\nid_rsa\t   id_rsa.pub\t  known_hosts\n```\n\n如果存在，则直接跳到 `将 SSH key 添加到 GitHub 中`\n\n<br>\n\n- 生成新的Key：（引号内的内容替换为你自己的邮箱）\n\n\n```\nssh-keygen -t rsa -C \"your_email@youremail.com\"\n```\n\n 输出显示：\n\n```\n>Generating public/private rsa key pair. Enter file in which to save the key \n(/Users/your_user_directory/.ssh/id_rsa):<press enter>\n```\n\n  直接回车，不要修改默认路劲。\n\n```\n>Enter passphrase (empty for no passphrase):<enter a passphrase>\nEnter same passphrase again:<enter passphrase again>\n```\n\n  设置一个密码短语，在每次远程操作之前会要求输入密码短语！闲麻烦可以直接回车，不设置。\n\n成功：\n\n```\nYour identification has been saved in /Users/your_user_directory/.ssh/id_rsa.\nYour public key has been saved in /Users/your_user_directory/.ssh/id_rsa.pub.\nThe key fingerprint is:\n... ...\n```\n\n默认会在路径`~/.ssh`下生成`id_rsa`和`id_rsa.pub`两个文件。\n\n<br>\n\n- 将 SSH key 添加到 GitHub 中\n\n终端输入：\n\n```\ncat ~/.ssh/id_rsa.pub\n```\n\n复制内容\n\n进入GitHub –> Settings –> SSH and GPG keys –> NEW SSH key\n\nTitle 里任意添一个标题，将复制的内容粘贴到 Key 里，点击下方 Add SSH key 绿色按钮即可\n\n<br>\n\n### 部署到 GitHub 上\n\n打开当前文件夹（blog）下的 `_config.yml` 文件，在末尾deploy后面添加几行代码：\n\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n\n注意：冒号后面有空格，yourname 替换成你自己的 GitHub 用户名。（repository 可以在 Github 上复制，但记得选`Clone with SSH` ）\n\n\n\n终端输入：\n\n```\nnpm install hexo-deployer-git --save\nhexo deploy\n```\n\n显示 `INFO  Deploy done: git` 表示完成。\n\n<br>\n\n### 设置独立域名\n\n博客根目录的 `source/` 目录下创建一个名叫 `CNAME` 的文件，注意没有后缀，里面写你的域名。\n\n部署，添加域名解析，就 OK 了\n\n域名解析请参考[“极简”创建 github page 并设置域名](https://www.jianshu.com/p/04ab48de1720)\n\n<br>\n\n### 编辑文章\n\n- 创建文章\n  命令行输入：\n\n```\nhexo new \"new article\"\n```\n\n之后在博客根目录 /source/_posts/ 文件夹下面，多了一个 new-article.md 文件。\n\n打开之后我们会看到：\n\n```\ntitle: new article\ndate: 2018-12-10 20:10:33\ntags:\n```\n\n> `title` 是当前文档名，也是将来在网页中显示的文章标题。\n>\n> `date` 是我们新建文档的时间。\n>\n> `tags` 是文档的标签，我们用次来为文章加标签。\n\n为文章加标签：\n\n```\n---\ntitle: new article\ndate: 2018-12-10 20:10:33\ntags:\n- tag1\n- tag2\n- tag3\n---\n```\n\n上面的文章贴上了 `tag1`、`tag2`、`tag3` 标签\n\n<br>\n\n- 删除文章\n\n博客根目录 `/source/_posts/` 文件夹下，删除对应文章的 `.md` 文件\n\n`_posts/` 文件夹不能为空，否则网页会报错 `Cannot GET /`\n\n\n\n\n\n------\n\n鸣谢：\n[Hexo + GitHub (Coding) Pages 搭建博客](https://github.com/HarleyWang93/blog/issues/1)\n[使用 Hexo 为自己在 Github 上建一个静态 Blog 站点](http://lixiaolai.com/2016/06/22/makecs-build-a-blog-with-hexo-on-github/)\n\n2018-12-11\n\n","tags":["blog"]},{"title":"三种建博方式","url":"/2018/12/11/三种建博方式/","content":"\n\n\n<br>\n\n\n\n1.博客平台\n\n简书、CSDN、知乎专栏等\n\n简单，可控性低\n\n申请个账号就可以写，其他的都不用管\n\n限制多，界面、排版、有没有广告自己说了不算，什么能发什么不能发，自己也说了不算\n\n<br>\n\n2.自己建站\n\n复杂度高，可控性高\n\n啥都能控制，但啥都靠自己，服务器、域名、写代码、部署，网站排名、防护等等\n\n<br>\n\n3.Github Page\n\n复杂度中，可控性比较高\n\n有控制权，但不用事事自己管。除了网页是静态的，几乎没有别的限制。界面、排版自己控制，需要点编程基础。服务器，网站防护等不用自己管。\n\n<br>\n\n------\n\n<br>\n\n[我的博客](https://v1coder.com/)\n\n[我的简书](https://www.jianshu.com/u/7cb04d09491e)","tags":["blog"]},{"title":"Hello World","url":"/2018/12/10/Hello-World/"}]